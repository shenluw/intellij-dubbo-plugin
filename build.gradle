import org.apache.tools.ant.filters.EscapeUnicode

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.14'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'top.shenluw.intellij'
version '0.1.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    dubboVersion = "2.7.4.1"
}

dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
//    implementation 'commons-collections:commons-collections:3.2.2'
//    implementation 'commons-net:commons-net:3.6'

    implementation("org.apache.dubbo:dubbo:$dubboVersion") {
        exclude group: 'org.springframework'
        exclude module: 'gson'
        exclude group: 'org.yaml'
        // 不能排除 ClassLoader会出现问题
        // exclude module: 'javassist'
    }
    implementation('redis.clients:jedis:3.1.+') {
        exclude group: 'org.slf4j'
    }

    implementation("com.ecwid.consul:consul-api:1.4.+"){
        exclude module: 'gson'
        exclude module: 'httpclient'
        exclude module: 'httpcore'
    }
//    implementation("org.apache.dubbo:dubbo-registry-etcd3:$dubboVersion")
//    implementation("org.apache.dubbo:dubbo-registry-nacos:$dubboVersion")
//    implementation("org.apache.dubbo:dubbo-registry-sofa:$dubboVersion")

    implementation("org.apache.dubbo:dubbo-dependencies-zookeeper:$dubboVersion") {
        exclude module: 'guava'
        exclude group: 'org.slf4j'
        exclude group: 'log4j'
    }

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.3.+'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2019.2.2'
    plugins 'java', 'yaml'
    pluginName = 'DubboPlugin'
}

patchPluginXml {
    sinceBuild 192
    untilBuild null
}

publishPlugin {
    token intellijPublishToken
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
patchPluginXml {
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(ProcessResources) {
    filesMatching('**/*.properties') {
        filter EscapeUnicode
    }
}